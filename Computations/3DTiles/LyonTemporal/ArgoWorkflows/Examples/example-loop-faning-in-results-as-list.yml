# Refer to the lenghty comment section within
#   write-some-result.script.source 
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: parameters-
spec:
  entrypoint: main
  volumes:
  - name: workdir
    hostPath:
      path: /data/host
  arguments:
    parameters:
    - name: persistedVolume   
      value: /within-container-mount-point/

  templates:
  - name: main
    steps:
    - - name: loop-write-some-result
        template: write-some-result
        arguments:
          parameters:
          - name: some-file-content
            value: "{{item}}"
        withItems: 
          - "one"
          - "two"
          - "three"

    - - name: print-loop-result
        template: whalesay
        arguments:
          parameters:
          - name: message
            # This whale should say
            #         ________________________ 
            #         < ["one","two","three"] >
            #         ------------------------ 
            value: "{{steps.loop-write-some-result.outputs.parameters.results-values}}"
            
  - name: write-some-result
    inputs:
      parameters:
      - name: some-file-content
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import os
        ###############################
        #####      READ HERE     ######
        ###############################
        # We here need a temporary name that
        #  - will also be the "path" valueFrom of the outputs. It can thus
        #    only use workflow variables (since "path" uses workflow variable
        #    values)
        #  - is sufficiently unique to avoid collisions with other loop 
        #    instances. 
        # In addition we CANNOT use a (workflow) generated identifier because
        #  - the calling loop step can NOT use expressions like
        #    {steps.loop-write-some-result.id} to pass them as input parameter
        #    to this template (refer to "step-identifier-access-issue.yml" issue
        #    workflow)
        #  - templates (among which this template) do NOT have an ".id" variable
        #    (refer to https://argoproj.github.io/argo-workflows/variables/ )
        # This means we don't have much choice and have to accept that the
        # some-file-content input parameter is indeed an indentifier. Which is
        # a quite strong assumption 
        output_filename=os.path.join(
          "{{workflow.parameters.persistedVolume}}",
          "{{inputs.parameters.some-file-content}}"+"-results.txt")
        with open(output_filename, "a+") as f:
          f.write("{{inputs.parameters.some-file-content}}" + "\n")
      volumeMounts:
       - name: workdir
         mountPath: "{{workflow.parameters.persistedVolume}}"
    outputs:
      parameters:
      - name: results-values
        valueFrom:
          path: "{{workflow.parameters.persistedVolume}}/{{inputs.parameters.some-file-content}}-results.txt"

  - name: whalesay
    inputs:
      parameters:
      - name: message
    container:
      image: docker/whalesay:latest
      command: [cowsay]
      args: ["{{inputs.parameters.message}}"]